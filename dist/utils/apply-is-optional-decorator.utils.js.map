{"version":3,"sources":["../../src/utils/apply-is-optional-decorator.utils.ts"],"names":[],"mappings":";;;;;;;;;;AAkBO,SAAS,wBAAA,CAAyB,aAAuB,WAAqB,EAAA;AAEnF,EAAI,IAAA,CAAC,2BAA6B,EAAA;AAChC,IAAA;AAAA;AAIF,EAAM,MAAA,cAAA,GAAmD,UAAQ,iBAAiB,CAAA;AAGlF,EAAM,MAAA,gBAAA,GAAmB,eAAe,UAAW,EAAA;AAGnD,EAAiB,gBAAA,CAAA,WAAA,CAAY,WAAW,WAAW,CAAA;AACrD;AAWA,SAAS,yBAA4B,GAAA;AACnC,EAAI,IAAA;AAEF,IAAA,SAAA,CAAQ,iBAAiB,CAAA;AACzB,IAAO,OAAA,IAAA;AAAA,GACD,CAAA,OAAA,CAAA,EAAA;AAEN,IAAO,OAAA,KAAA;AAAA;AAEX","file":"apply-is-optional-decorator.utils.js","sourcesContent":["/**\n * @function applyIsOptionalDecorator\n * @description Applies the IsOptional decorator from class-validator to a property of a class.\n * This makes the property optional for validation purposes, allowing null or undefined values.\n * If class-validator is not available, this function does nothing.\n *\n * @param targetClass - The class constructor to apply the decorator to\n * @param propertyKey - The name of the property to make optional\n *\n * @example\n * class UserDto {\n *   @IsString()\n *   name: string;\n * }\n *\n * // Make the name property optional\n * applyIsOptionalDecorator(UserDto, 'name');\n */\nexport function applyIsOptionalDecorator(targetClass: Function, propertyKey: string) {\n  // Check if class-validator is available in the project\n  if (!isClassValidatorAvailable()) {\n    return\n  }\n\n  // Import class-validator dynamically\n  const classValidator: typeof import('class-validator') = require('class-validator')\n\n  // Create the IsOptional decorator factory\n  const decoratorFactory = classValidator.IsOptional()\n\n  // Apply the decorator to the target class property\n  decoratorFactory(targetClass.prototype, propertyKey)\n}\n\n/**\n * @function isClassValidatorAvailable\n * @description Checks if the class-validator package is available in the project.\n * This is used to gracefully handle cases where class-validator is not installed.\n *\n * @returns {boolean} True if class-validator is available, false otherwise\n *\n * @internal\n */\nfunction isClassValidatorAvailable() {\n  try {\n    // Attempt to require class-validator\n    require('class-validator')\n    return true\n  } catch {\n    // Return false if class-validator is not available\n    return false\n  }\n}\n"]}